/*
  ******************************************************************************
  * @file    : algorithm.cpp
  * @author  : Silin Li
  * @version : V1.0
  * @date    : 2016.07.10
  * @note	 :
  * @history :
  *
  ******************************************************************************
*/
#include <iostream>
#include <vector>
#include <ctime>
#include <cstdlib>
#include <cstdio>

using namespace std;

int GetMaxScores(const vector<int> &nums);

int main(int argc, char *argv[]) {
    cout<<"#################### This is the algorithm play ####################\n";
    cout<<"Please input the array size you want input: ";
    int n = 0;
    cin>>n;
    if(n<1)
      cout<<"The size you input is too small, make it >= 1 at least!\n";

    vector<int> nums;
    srand((unsigned)time(NULL)); //用当前系统时间设置种子
    cout<<"The nums generated by rand are: \n";
    for (int i = 0; i < n; ++i)
    {
      nums.push_back(rand()%100);
      cout<<nums[i]<<" ";
    }
    
    // vector<int> nums = {1, 3, 5, 6, 7, 3, 2, 1, 4, 5, 3, 11, 22, 5, 4, 3, 22, 43, 3, 1, 22, 3, 4, 55, 100, 1, 1, 1, 323,
    //                     12, 3, 4, 64};

    cout <<"\nThe MaxScores we can get is : "<< GetMaxScores(nums) << endl;

}


int GetMaxScores(const vector<int> &nums) {
    vector<int> arr(nums);
    arr.insert(arr.begin(),1);
    arr.push_back(1);

    int dp[nums.size() + 2][nums.size() + 2] = {};
    int n = nums.size() + 2;

    for (int k = 2; k < n; ++k) {
        for (int left = 0; left < n - k; ++left) {
            int right = left + k;
            for (int i = left + 1; i < right; ++i) {
                int tmp = dp[left][right];
                dp[left][right] = max(dp[left][right], arr[left] * arr[i] * arr[right] + dp[left][i] + dp[i][right]);

            }

        }
    }
    return dp[0][n - 1];
}